//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace E_FoodCourt.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class E_FoodCourtEntities_CS : DbContext
    {
        public E_FoodCourtEntities_CS()
            : base("name=E_FoodCourtEntities_CS")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AdminUser> AdminUsers { get; set; }
        public virtual DbSet<Cuisine> Cuisines { get; set; }
        public virtual DbSet<EWallet> EWallets { get; set; }
        public virtual DbSet<EWalletLoadingHistory> EWalletLoadingHistories { get; set; }
        public virtual DbSet<EWalletTransaction> EWalletTransactions { get; set; }
        public virtual DbSet<FoodCategory> FoodCategories { get; set; }
        public virtual DbSet<Menu> Menus { get; set; }
        public virtual DbSet<MenuItem> MenuItems { get; set; }
        public virtual DbSet<Offer> Offers { get; set; }
        public virtual DbSet<OrderType> OrderTypes { get; set; }
        public virtual DbSet<ProessingStatu> ProessingStatus { get; set; }
        public virtual DbSet<RegisteredUser> RegisteredUsers { get; set; }
        public virtual DbSet<Restaurant> Restaurants { get; set; }
        public virtual DbSet<RestaurantLocation> RestaurantLocations { get; set; }
        public virtual DbSet<ResturantFacility> ResturantFacilities { get; set; }
        public virtual DbSet<ResturantFacilityMaster> ResturantFacilityMasters { get; set; }
        public virtual DbSet<ResturantTable> ResturantTables { get; set; }
        public virtual DbSet<SeatReservation> SeatReservations { get; set; }
        public virtual DbSet<SeatReservationDetail> SeatReservationDetails { get; set; }
        public virtual DbSet<UserLocation> UserLocations { get; set; }
        public virtual DbSet<UserOrder> UserOrders { get; set; }
        public virtual DbSet<UserOrderDetail> UserOrderDetails { get; set; }
        public virtual DbSet<UserReview> UserReviews { get; set; }
        public virtual DbSet<UserType> UserTypes { get; set; }
    
        public virtual ObjectResult<Nullable<int>> usp_AuthenticateUser(string emailId, string password)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("emailId", emailId) :
                new ObjectParameter("emailId", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_AuthenticateUser", emailIdParameter, passwordParameter);
        }
    
        public virtual int usp_RegisterUser(string firstName, string lastName, string mobileNumber, string companyName, string emailID, Nullable<bool> active, string password, Nullable<System.DateTime> dOB)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RegisterUser", firstNameParameter, lastNameParameter, mobileNumberParameter, companyNameParameter, emailIDParameter, activeParameter, passwordParameter, dOBParameter);
        }
    }
}
